{"version":3,"sources":["util/index.js","Components/PostSingle.js","Components/DeletePost.js","Components/AccountForm.js","Components/Home.js","Components/Logout.js","Components/AddPosts.js","Components/MessageForm.js","Components/PostView.js","Components/MyProfile.js","Components/Search.js","index.js"],"names":["callApi","a","url","method","token","body","options","toUpperCase","headers","JSON","stringify","fetch","process","response","json","data","error","console","PostSingle","post","children","className","author","username","title","price","description","location","willDeliver","DeletePosts","props","posts","setPostId","fetchPosts","handleDelete","postId","to","map","id","_id","isAuthor","onClick","AccountForm","setToken","setUser","useState","setUsername","password","setPassword","params","useParams","history","useHistory","onSubmit","event","preventDefault","user","loginResp","userResp","push","type","placeholder","minLength","value","onChange","target","Home","src","alt","Logout","AddPost","setTitle","setPrice","setDescription","setLocation","setWillDeliver","setPosts","handleAdd","ev","newPostResp","MessageForm","content","setContent","handleSubmit","message","messageResp","messages","length","PostView","log","postResp","find","fromUser","MyProfile","setMesaages","idx","Search","searchTerm","setSearchTerm","filteredPosts","filter","text","includes","postMatches","toLowerCase","App","setMessages","allPosts","useEffect","exact","path","DeletePost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b437150.chunk.js","sourcesContent":["const { REACT_APP_BASE_URL } = process.env;\n\nexport const callApi = async ({ url, method, token, body }) => {\n    try {\n        const options = {\n            method: method ? method.toUpperCase() : 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        };\n        if (token) options.headers['Authorization'] = `Bearer ${token}`;\n        const response = await fetch(`${REACT_APP_BASE_URL}${url}`, options);\n        const data = await response.json();\n        if(data.error) {\n             (data.error);\n        }\n        return data;\n    } catch (error) {\n        console.error(error)\n    }\n}\n","import React from 'react';\n\nconst PostSingle = ({post, children}) => {\n    return (post\n        ? <div className=\"single-post\">\n            <h3><b>Seller's Username: {post.author.username}</b></h3>\n            <div><b><i>{post.title}</i></b></div>\n            <div>Price: {post.price ? post.price : '[On Request]'}</div>\n            <div>Description: {post.description}</div>\n            <div>Location: {post.location ? post.location : '[On Request]'}</div>\n            <div>Will Deliver? -- {post.willDeliver ? 'yes' : 'no'}</div>\n            {\n                children\n            }\n        </div>\n        : 'Loading....'\n    )\n}\n\nexport default PostSingle;","import React from 'react';\nimport { callApi } from '../util';\nimport PostSingle from './PostSingle';\nimport { Link } from 'react-router-dom';\n\nconst DeletePosts = (props) => {\n    const { posts, setPostId, token, fetchPosts } = props;\n\n    const handleDelete = async (postId) => {\n        const deleteResp = await callApi({\n            method: 'DELETE',\n            url: `/posts/${postId}`,\n            token\n        });\n        await fetchPosts();\n    }\n        \n    return <>\n        {\n            token ? <Link className=\"add-post-link\" to='/addpost'>Add Post</Link> : ''\n        }\n        <h1>Posts</h1>\n        {\n            posts.map(post => <PostSingle id=\"posts\" key={post._id} post={post} token={token}>\n                <Link to={`/posts/${post._id}`}>Details</Link>\n                {\n                    post.isAuthor && <button onClick={() => handleDelete(post._id)}>Delete Post</button>\n                }\n            </PostSingle>\n            )\n        }\n    </>\n}\n\nexport default DeletePosts;","import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\nimport { callApi } from '../util';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst AccountForm = ({setToken, setUser}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const params = useParams();\n    const history = useHistory();\n\n    return <>\n        <form \n        className=\"inputs\" \n        onSubmit={ async (event) => {\n            event.preventDefault();\n\n            const loginResp = await callApi({\n                url: `/users/${params.method}`,\n                method: 'POST',\n                body: {\n                    user: {\n                        username,\n                        password\n                    }\n                }\n            });\n            if (loginResp.data) {\n                const userResp = await callApi({url: '/users/me', token: loginResp.data.token});\n                setToken(loginResp.data.token);\n                setUser(userResp.data.username)\n                if (loginResp.data.token) {\n                    history.push('/'); \n                }\n                if (!password) {\n                    throw ('wrong username or password')\n                }\n            }\n        }}>\n            <input className=\"inputs\" type=\"text\" placeholder=\"Enter Username\" minLength={8} value={username} onChange={(event) => setUsername(event.target.value)}></input>\n            <input className=\"inputs\" type=\"password\" placeholder=\"Enter Password\" minLength={8} value={password} onChange={(event) => setPassword(event.target.value)}></input>\n            <button className=\"btn-input\" type=\"submit\">Submit</button>\n        </form>\n    </>\n}\n\nexport default AccountForm;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = ({username, token}) => {\n    return (<div id=\"welcome\">\n        {\n            token ? <h1 className=\"title\">Strager's Things</h1> : <h1 className=\"title\"> Welcome to Strager's Things</h1>\n        }\n        {\n            token ? <div className=\"welcome-message\">Welcome! You are logged in as {username}!</div> : ''\n        }\n        {\n            token ? <Link className=\"profile-link\" to=\"/profile\">View Profile</Link> : ''\n        }\n        <img className=\"the-image\" src=\"https://images-na.ssl-images-amazon.com/images/I/610wb0SooJL.png\" alt=\"image of shopping online\"></img>\n    </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Logout = ({setToken}) => {\n    return <Link className=\"main-link\" to=\"/\" onClick={() => setToken('')}>LOGOUT</Link>\n}\n\nexport default Logout;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { callApi } from '../util';\n\nconst AddPost = (props) => {\n    const [title, setTitle] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [location, setLocation] = useState('')\n    const [willDeliver, setWillDeliver] = useState('')\n\n    const { token, setPosts } = props\n    const history = useHistory();\n\n    const handleAdd = async (ev) => {\n        ev.preventDefault();\n        const addPostResp = await callApi({\n            url: '/posts', \n            method: 'POST', \n            body: {\n                post: {\n                    title,\n                    price, \n                    description,\n                    location,\n                    willDeliver\n                }}, \n            token});\n            const newPostResp = await callApi({url: '/posts', token});\n            setPosts(newPostResp.data.posts);\n            setTitle('');\n            setPrice('');\n            setDescription('');\n            if(newPostResp.data.posts) {\n                history.push('/posts');\n            }\n    }\n    return <>\n    {\n        token &&\n        <div>\n            <h1>Add New Post</h1>\n            <form onSubmit={handleAdd}>\n                <fieldset>\n                    <label>Title: </label>\n                    <input type=\"text\" placeholder=\"*title*\" value={title} onChange={(event) => {setTitle(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Price: </label>\n                    <input type=\"text\" placeholder=\"price\" value={price} onChange={(event) => {setPrice(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Description: </label>\n                    <input type=\"text\" placeholder=\"description\" value={description} onChange={(event) => {setDescription(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Location: </label>\n                    <input type=\"text\" placeholder=\"location\" value={location} onChange={(event) => {setLocation(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Will Deliver? </label>\n                    <select type=\"text\" value={willDeliver} onChange={(ev) => setWillDeliver(ev.target.value)}>\n                        <option value=\"\">Select</option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                    </select>\n                </fieldset>\n                <fieldset>\n                    <button className=\"newpost-submit\" type=\"submit\">Submit</button>\n                </fieldset>\n            </form>\n        </div>    \n    }\n    </>\n}\n\nexport default AddPost;\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { callApi } from '../util';\n\n\nconst MessageForm = ({post, token, fetchPosts}) => {\n    const { postId } = useParams();\n    const [content, setContent] = useState('');\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        const messageResp = await callApi({\n            method: 'POST',\n            url: `/posts/${postId}/messages`,\n            token,\n            body: {\n                message: {\n                    content\n                }\n            }\n        });\n        setContent(messageResp.data.message.content);\n        await fetchPosts()\n        setContent('');\n    }\n    return <>\n        { \n        token && !post.isAuthor ?\n            <form onSubmit={handleSubmit}>\n                <input value={content} placeholder=\"content\" onChange={(ev) => setContent(ev.target.value)}></input>\n                <button type=\"submit\">Send Message</button>\n            </form>\n            : ''\n        }\n        {\n            post.isAuthor && post.messages.length ?\n            <form onSubmit={handleSubmit}>\n                <input value={content} placeholder=\"content\" onChange={(ev) => setContent(ev.target.value)}></input>\n                <button type=\"submit\">Send Message</button>\n            </form>\n            : ''\n        }\n    </>\n}\n\nexport default MessageForm;","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PostSingle from './PostSingle';\nimport MessageForm from './MessageForm';\n\nconst PostView = ({posts, token, fetchPosts}) => {\n    const { postId } = useParams();\n    console.log('postId', postId);\n    const postResp = posts.find(post => post._id === postId);\n    console.log('post: ', postResp)\n    return <>\n        <PostSingle post={postResp} >\n            {\n                postResp && postResp.messages && postResp.messages.map(message => <div key={message._id}>{message.fromUser.username}: {message.content}</div>)\n            }\n            <MessageForm post={postResp} token={token} fetchPosts={fetchPosts} />\n        </PostSingle>\n    </>\n}\n\nexport default PostView;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { callApi } from '../util';\n\nconst MyProfile = ({ token, messages, user, setMesaages}) => {\n    const history = useHistory();\n\n    const handleSubmit = async () => {\n        const messageResp = await callApi({\n            url: '/users/me',\n            token\n        });\n        setMesaages(messageResp.data.messages);    \n    }\n    if(!token) {\n        history.push('/')\n    }\n\n    return <>\n    <h1>My Profile</h1>\n    <form onSubmit={(ev) => {\n        ev.preventDefault();\n        handleSubmit()\n    }}>\n        <button type=\"submit\">Click for Messages</button>\n    </form>\n    <h2>Sent Messages</h2>\n    {\n        token ? \n        messages.map((message, idx) => {\n            return <div key={idx} >\n                {\n                    user === message.fromUser.username ?\n                    <>\n                    <div>\n                        <div><b>Product Title: </b>\"{message.post.title}\" </div>\n                        <div><b>Product ID: </b>{message.post._id}</div>\n                        <div><b>Message Sent by Me: </b>{message.content}</div> \n                        <hr></hr>\n                    </div>\n                    </>\n                    : ''\n                }\n            </div>\n        }) : ''\n    }\n    <h2>Received Messages</h2>\n    {\n        token ? \n        messages.map((message, idx) => {\n            return <div key={idx} >\n                {\n                    user !== message.fromUser.username ?\n                    <>\n                        <div><b>Product Title: </b>\"{message.post.title}\" </div>\n                        <div><b>Product ID: </b>{message.post._id}</div>\n                        <div><b>Message: </b>{message.content}</div> \n                        <hr></hr>\n                    </>\n                    : ''\n                }\n            </div>\n        }) : ''\n    }\n    </>        \n}\nexport default MyProfile;","import React, { useState } from 'react';\n\nconst Search =  ({posts, setPosts, fetchPosts}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const postMatches = (post, text) => {\n        let check = post.includes(text);\n        return check;\n    }\n    const handleSubmit = () => {\n        const filteredPosts = posts.filter(post => postMatches(post.title.toLowerCase(), searchTerm));\n        setPosts(filteredPosts);\n        if (!searchTerm.length) {\n            fetchPosts();\n        }\n    }\n\n    return <>\n        <form className=\"search-form\" onSubmit={(event) => {\n            event.preventDefault();\n            handleSubmit();\n        }}>\n            <input type=\"text\" placeholder=\"search by title\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nimport DeletePosts from './Components/DeletePost';\nimport AccountForm from './Components/AccountForm';\nimport Home from './Components/Home';\nimport Logout from './Components/Logout';\nimport AddPost from './Components/AddPosts';\nimport PostView from './Components/PostView';\nimport MyProfile from './Components/MyProfile';\nimport Search from './Components/Search';\n\n\nimport '../src/style.css'\nimport { callApi } from './util';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [token, setToken] = useState('');\n    const [user, setUser] = useState('');\n    const [postId, setPostId] = useState('');\n    const [messages, setMessages] = useState([]);\n    \n    const fetchPosts = async () => {\n        const response = await callApi({\n            url: '/posts',\n            token\n        });\n        const allPosts = response.data.posts;\n        if(allPosts) setPosts(allPosts);\n    }\n    \n    useEffect(() => {\n        try {\n            fetchPosts();\n            } catch (error) {\n                console.log(error);\n            }\n        }, [token])\n\n  return (\n    <BrowserRouter>\n        <div id=\"container\">\n            <div className=\"navbar\">\n                <Link className=\"main-link\" to=\"/\">HOME</Link>\n                <Link className=\"main-link\" to=\"/posts\">POSTS</Link>\n                {\n                    token && <Link className=\"main-link\" to=\"/profile\">PROFILE</Link>\n                }\n                {\n                    token ? <Logout setToken={setToken}/> : <Link className=\"main-link\" to=\"/account/:method\">LOGIN/REGISTER</Link>\n                }\n            </div>\n            <Route exact path=\"/\">\n                <Home username={user} token={token} posts={posts}/>\n            </Route>\n            <Route exact path=\"/posts\">\n                <Search posts={posts} setPosts={setPosts} fetchPosts={fetchPosts}/>\n                <DeletePosts posts={posts} token={token} fetchPosts={fetchPosts} setPostId={setPostId} />\n            </Route>\n            <Route exact path=\"/addpost\">\n                <AddPost token={token} setPosts={setPosts} />\n            </Route>\n            <Route exact path=\"/posts/:postId\">\n                <PostView posts={posts} token={token} fetchPosts={fetchPosts}/>\n            </Route>\n            <Route exact path=\"/profile\">\n                <MyProfile token={token} messages={messages} setMesaages={setMessages} user={user}/>\n            </Route>\n            <Route exact path=\"/account/:method\">\n                <Link className=\"links\" to=\"/account/login\">Login</Link> \n                <Link className=\"links\" to=\"/account/register\">Register</Link>\n                <AccountForm setToken={setToken} setUser={setUser}/>   \n            </Route>\n        </div>\n    </BrowserRouter>\n  )\n}\nReactDOM.render(\n  <App />,\n  document.getElementById('app'),\n);"],"sourceRoot":""}