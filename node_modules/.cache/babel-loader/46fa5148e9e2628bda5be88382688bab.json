{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_BASE_URL\n} = process.env;\n\nconst AccountForm = ({\n  setToken,\n  setUser\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const params = useParams();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      className: \"form-container\",\n      onSubmit: async event => {\n        event.preventDefault();\n        const loginResp = await callApi({\n          url: `/users/${params.method}`,\n          method: \"POST\",\n          body: {\n            user: {\n              username,\n              password\n            }\n          }\n        });\n\n        if (loginResp.data) {\n          const userResp = await callApi({\n            url: '/users/me',\n            token: loginResp.data.token\n          });\n          setToken(loginResp.data.token);\n          setUser(userResp.data.username);\n\n          if (loginResp.data.token) {\n            history.push('/');\n          }\n\n          if (!password) {\n            throw 'wrong username or password';\n          }\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-register-link\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"links\",\n            to: \"/account/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"links\",\n            to: \"/account/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputs\",\n            type: \"text\",\n            placeholder: \"Enter Username\",\n            minLength: 8,\n            value: username,\n            onChange: event => setUsername(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputs\",\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            minLength: 8,\n            value: password,\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-input\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountForm, \"PV2GAx0rmgboZxWoXyyYeBanVVw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/AccountForm.js"],"names":["React","useState","useParams","useHistory","Link","callApi","REACT_APP_BASE_URL","process","env","AccountForm","setToken","setUser","username","setUsername","password","setPassword","params","history","event","preventDefault","loginResp","url","method","body","user","data","userResp","token","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { callApi } from '../util';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst AccountForm = ({setToken, setUser}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const params = useParams();\n    const history = useHistory();\n\n    return <>\n        <form \n        method='post'\n        className=\"form-container\" \n        onSubmit={ async (event) => {\n            event.preventDefault();\n\n            const loginResp = await callApi({\n                url: `/users/${params.method}`,\n                method: \"POST\",\n                body: {\n                    user: {\n                        username,\n                        password\n                    }\n                }\n            });\n            if (loginResp.data) {\n                const userResp = await callApi({url: '/users/me', token: loginResp.data.token});\n                setToken(loginResp.data.token);\n                setUser(userResp.data.username)\n                if (loginResp.data.token) {\n                    history.push('/'); \n                }\n                if (!password) {\n                    throw ('wrong username or password');\n                }\n            }\n        }}>\n            <div className='account-form'>\n                <div className=\"login-register-link\" >\n                    <Link className=\"links\" to=\"/account/login\">Login</Link> \n                    <Link className=\"links\" to=\"/account/register\">Register</Link>\n                </div>\n                <div className='div-form'>\n                    <input className=\"inputs\" type=\"text\" placeholder=\"Enter Username\" minLength={8} value={username} onChange={(event) => setUsername(event.target.value)}></input>\n                    <input className=\"inputs\" type=\"password\" placeholder=\"Enter Password\" minLength={8} value={password} onChange={(event) => setPassword(event.target.value)}></input>\n                </div>\n                <div className='submit-button'>\n                    <button className=\"btn-input\" type=\"submit\">Submit</button>\n                </div>\n            </div>\n        </form>\n    </>\n}\n\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}