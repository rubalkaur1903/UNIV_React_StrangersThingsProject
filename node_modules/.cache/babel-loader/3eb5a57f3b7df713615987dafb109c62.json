{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  posts,\n  setPosts,\n  fetchPosts\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  console.log('postsInSearch', posts);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredData, setFilteredData] = useState(posts);\n  console.log(filteredData);\n\n  const handleSearch = () => {\n    _s();\n\n    useEffect(async () => {\n      try {\n        const data = await fetchPosts();\n        console.log('data', data); // setFilteredData(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }, []);\n  };\n\n  _s(handleSearch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  handleSearch(); // const postMatches = async () => {\n  //     try {\n  //         const searchResp = await callApi({\n  //             method: 'GET',\n  //             url: `/posts/${searchTerm}`,\n  //         });\n  //         console.log('searchResp', searchResp);\n  // if(!searchTerm) {\n  //     return posts;\n  // } else{\n  //     return posts.find(post => {\n  //         if (searchTerm === post.title.toLowerCase()) {\n  //         }\n  // const searchResults = post.title.toLowerCase() === searchTerm;\n  // console.log('searchResults', searchResults)\n  //     })\n  // }\n  //             // await setPosts(searchResults);\n  //         } catch (error) {\n  //             console.error(error)\n  //         }\n  //     }\n  // postMatches();\n  // const postMatches = (post) => {\n  //     console.log('post', post)\n  //     const includedPosts = posts.include(searchTerm, post);\n  // }\n  // const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  // const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: ev => {\n        ev.preventDefault(); // console.log('searchTerm', searchTerm)\n        // const mappingPosts = postsToDisplay.map(postToDisplay)\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: event => setFilteredData(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(Search, \"i8POcwIO8haapxrbUEyPSbodWug=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js"],"names":["React","useEffect","useState","callApi","Search","posts","setPosts","fetchPosts","console","log","searchTerm","setSearchTerm","filteredData","setFilteredData","handleSearch","data","error","ev","preventDefault","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,SAAxB;;;;AAEA,MAAMC,MAAM,GAAI,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAAA;;AAAA;;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,KAA7B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAACG,KAAD,CAAhD;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYG,YAAZ;;AAEA,QAAME,YAAY,GAAG,MAAM;AAAA;;AACvBb,IAAAA,SAAS,CAAE,YAAY;AACnB,UAAI;AACA,cAAMc,IAAI,GAAG,MAAMR,UAAU,EAA7B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB,EAFA,CAGA;AACH,OAJD,CAIE,OAAOC,KAAP,EAAc;AACZR,QAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACH;AACJ,KARQ,EAQN,EARM,CAAT;AASH,GAVD;;AAN+C,KAMzCF,YANyC;;AAiB/CA,EAAAA,YAAY,GAjBmC,CAkB/C;AACA;AACA;AACA;AACA;AACA;AACA;AAEQ;AACA;AACA;AACA;AACA;AACA;AACQ;AACA;AACR;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;;AAGA,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAGG,EAAD,IAAQ;AAC5CA,QAAAA,EAAE,CAACC,cAAH,GAD4C,CAE5C;AACA;AACH,OAJD;AAAA,8BAMI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AAAiE,QAAA,KAAK,EAAER,UAAxE;AAAoF,QAAA,QAAQ,EAAGS,KAAD,IAAWN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAxH;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAWH,CA7DD;;IAAMjB,M;;KAAAA,M;AA+DN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\n\nconst Search =  ({posts, setPosts, fetchPosts}) => {\n    console.log('postsInSearch', posts)\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filteredData, setFilteredData] = useState(posts);\n    console.log(filteredData)\n\n    const handleSearch = () => {\n        useEffect( async () => {\n            try {\n                const data = await fetchPosts();\n                console.log('data', data)\n                // setFilteredData(data);\n            } catch (error) {\n                console.error(error);\n            }\n        }, [])\n    }\n    handleSearch();\n    // const postMatches = async () => {\n    //     try {\n    //         const searchResp = await callApi({\n    //             method: 'GET',\n    //             url: `/posts/${searchTerm}`,\n    //         });\n    //         console.log('searchResp', searchResp);\n        \n            // if(!searchTerm) {\n            //     return posts;\n            // } else{\n            //     return posts.find(post => {\n            //         if (searchTerm === post.title.toLowerCase()) {\n            //         }\n                    // const searchResults = post.title.toLowerCase() === searchTerm;\n                    // console.log('searchResults', searchResults)\n            //     })\n            // }\n//             // await setPosts(searchResults);\n//         } catch (error) {\n//             console.error(error)\n//         }\n//     }\n// postMatches();\n    // const postMatches = (post) => {\n    //     console.log('post', post)\n    //     const includedPosts = posts.include(searchTerm, post);\n    // }\n    // const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n    // const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n\n    return <>\n        <form className=\"search-form\" onSubmit={(ev) => {\n            ev.preventDefault();\n            // console.log('searchTerm', searchTerm)\n            // const mappingPosts = postsToDisplay.map(postToDisplay)\n        }\n    }>\n            <input type=\"text\" placeholder=\"search\" className=\"search-input\" value={searchTerm} onChange={(event) => setFilteredData(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}