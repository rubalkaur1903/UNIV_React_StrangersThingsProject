{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/EditPost.js\";\nimport React from 'react';\nimport PostSingle from './PostSingle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPost = ({\n  posts,\n  token,\n  fetchPosts\n}) => {\n  const handleEdit = async () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostSingle, {\n      children: posts.isAuthor ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit,\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 34\n      }, this) : ''\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 27\n    }, this))]\n  }, void 0, true);\n};\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/EditPost.js"],"names":["React","PostSingle","EditPost","posts","token","fetchPosts","handleEdit","map","post","isAuthor","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAAiC;AAE9C,QAAMC,UAAU,GAAG,YAAY,CAE9B,CAFD;;AAGA,sBAAO;AAAA,4BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,EAGHH,KAAK,CAACI,GAAN,CAAUC,IAAI,iBAAI,QAAC,UAAD;AAAA,gBAEVL,KAAK,CAACM,QAAN,gBAAiB;AAAQ,QAAA,OAAO,EAAE,MAAMH,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB,GAAyE;AAF/D,OAAiBE,IAAI,CAACE,GAAtB;AAAA;AAAA;AAAA;AAAA,YAAlB,CAHG;AAAA,kBAAP;AAWH,CAhBD;;KAAMR,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport PostSingle from './PostSingle';\n\nconst EditPost = ({ posts, token, fetchPosts}) => {\n\n    const handleEdit = async () => {\n\n    }\n    return <>\n    <div>Edit</div>\n    {\n        posts.map(post => <PostSingle key={post._id}>\n            {\n                posts.isAuthor ? <button onClick={() => handleEdit}>Edit Post</button> : ''\n            }\n        </PostSingle>)\n    }\n    \n    </>\n}\n\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}