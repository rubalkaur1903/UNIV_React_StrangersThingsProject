{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_BASE_URL\n} = process.env;\n\nconst AccountForm = ({\n  setToken,\n  setUser\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const params = useParams();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inputs\",\n      disabled: username.value && password.value ? false : true,\n      onSubmit: async event => {\n        event.preventDefault();\n        const loginResp = await callApi({\n          url: `/users/${params.method}`,\n          method: 'POST',\n          body: {\n            user: {\n              username,\n              password\n            }\n          }\n        });\n\n        if (loginResp.data) {\n          console.log('loginResp', loginResp);\n          const userResp = await callApi({\n            url: '/users/me',\n            token: loginResp.data.token\n          });\n          console.log('userResp', userResp);\n          setToken(loginResp.data.token);\n          setUser(userResp.data.username);\n\n          if (loginResp.data.token) {\n            history.push('/');\n          }\n\n          if (!password) {\n            throw 'wrong username or password';\n          }\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputs\",\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        minLength: 8,\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputs\",\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        minLength: 8,\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-input\",\n        type: \"submit\" // disabled={username.value && password.value ? false : true}\n        ,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountForm, \"PV2GAx0rmgboZxWoXyyYeBanVVw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/AccountForm.js"],"names":["React","useState","useParams","useHistory","callApi","REACT_APP_BASE_URL","process","env","AccountForm","setToken","setUser","username","setUsername","password","setPassword","params","history","value","event","preventDefault","loginResp","url","method","body","user","data","console","log","userResp","token","push","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\nimport { callApi } from '../util';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst AccountForm = ({setToken, setUser}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const params = useParams();\n    const history = useHistory();\n\n    return <>\n        <form \n        className=\"inputs\" \n        disabled={username.value && password.value ? false : true}\n        onSubmit={ async (event) => {\n            event.preventDefault();\n\n            const loginResp = await callApi({\n                url: `/users/${params.method}`,\n                method: 'POST',\n                body: {\n                    user: {\n                        username,\n                        password\n                    }\n                }\n            });\n            if (loginResp.data) {\n                console.log('loginResp', loginResp)\n                const userResp = await callApi({url: '/users/me', token: loginResp.data.token});\n                console.log('userResp', userResp)\n                setToken(loginResp.data.token);\n                setUser(userResp.data.username)\n                if (loginResp.data.token) {\n                    history.push('/'); \n                }\n                if (!password) {\n                    throw ('wrong username or password')\n                }\n            }\n        }}>\n            <input className=\"inputs\" type=\"text\" placeholder=\"Enter Username\" minLength={8} value={username} onChange={(event) => setUsername(event.target.value)}></input>\n            <input className=\"inputs\" type=\"password\" placeholder=\"Enter Password\" minLength={8} value={password} onChange={(event) => setPassword(event.target.value)}></input>\n            <button \n            className=\"btn-input\" \n            type=\"submit\"\n            // disabled={username.value && password.value ? false : true}\n            >Submit</button>\n        </form>\n    </>\n}\n\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}