{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  posts,\n  setPosts\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const postMatches = (post, text) => {\n    console.log(post);\n    let check = post.includes(text);\n    console.log('check', check);\n    return check;\n  }; // useEffect(() => {\n  //     try {\n  //     } catch (error) {\n  //         console.error(error)\n  //     }\n  // }, [])\n\n\n  const filteredPosts = posts.filter(post => postMatches(post.title.toLowerCase(), searchTerm));\n  console.log('filteredPosts', filteredPosts);\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n  console.log('postsToDisplay', postsToDisplay);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: event => {\n        event.preventDefault();\n        postsToDisplay.map(postToDisplay => {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: postToDisplay.author.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: postToDisplay.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this)]\n          }, postToDisplay._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this);\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js"],"names":["React","useEffect","useState","callApi","Search","posts","setPosts","searchTerm","setSearchTerm","postMatches","post","text","console","log","check","includes","filteredPosts","filter","title","toLowerCase","postsToDisplay","length","event","preventDefault","map","postToDisplay","author","username","_id","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,SAAxB;;;;AAEA,MAAMC,MAAM,GAAI,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AACnC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMO,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAII,KAAK,GAAGJ,IAAI,CAACK,QAAL,CAAcJ,IAAd,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACA,WAAOA,KAAP;AACH,GALD,CAFmC,CAQnC;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,aAAa,GAAGX,KAAK,CAACY,MAAN,CAAaP,IAAI,IAAID,WAAW,CAACC,IAAI,CAACQ,KAAL,CAAWC,WAAX,EAAD,EAA2BZ,UAA3B,CAAhC,CAAtB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,aAA7B;AAEA,QAAMI,cAAc,GAAGb,UAAU,CAACc,MAAX,GAAoBL,aAApB,GAAoCX,KAA3D;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,cAA9B;AAEA,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAIE,KAAD,IAAW;AAChDA,QAAAA,KAAK,CAACC,cAAN;AACAH,QAAAA,cAAc,CAACI,GAAf,CAAmBC,aAAa,IAAI;AAChC;AAAA;AAAA,oCACI;AAAA,wBAAMA,aAAa,CAACC,MAAd,CAAqBC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAMF,aAAa,CAACP;AAApB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAAWO,aAAa,CAACG,GAAzB;AAAA;AAAA;AAAA;AAAA;AAIH,SALD;AAMH,OARD;AAAA,8BASI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AAAiE,QAAA,KAAK,EAAErB,UAAxE;AAAoF,QAAA,QAAQ,EAAGe,KAAD,IAAWd,aAAa,CAACc,KAAK,CAACO,MAAN,CAAaC,KAAd;AAAtH;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAcH,CAnCD;;GAAM1B,M;;KAAAA,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\n\nconst Search =  ({posts, setPosts}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const postMatches = (post, text) => {\n        console.log(post)\n        let check = post.includes(text);\n        console.log('check', check)\n        return check;\n    }    \n    // useEffect(() => {\n    //     try {\n    //     } catch (error) {\n    //         console.error(error)\n    //     }\n    // }, [])\n    \n    const filteredPosts = posts.filter(post => postMatches(post.title.toLowerCase(), searchTerm));\n    console.log('filteredPosts', filteredPosts)\n\n    const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n    console.log('postsToDisplay', postsToDisplay)\n\n    return <>\n        <form className=\"search-form\" onSubmit={ (event) => {\n            event.preventDefault();\n            postsToDisplay.map(postToDisplay => {\n                <div key={ postToDisplay._id }>\n                    <div>{postToDisplay.author.username}</div>\n                    <div>{postToDisplay.title}</div>\n                </div>\n            })\n        }}>\n            <input type=\"text\" placeholder=\"search\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}