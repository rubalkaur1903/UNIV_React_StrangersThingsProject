{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/DeletePost.js\";\nimport React from 'react';\nimport { callApi } from '../util';\nimport PostSingle from './PostSingle';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeletePosts = props => {\n  const {\n    posts,\n    postId,\n    setPostId,\n    token,\n    fetchPosts\n  } = props;\n\n  const handleDelete = async postId => {\n    const deleteResp = await callApi({\n      method: 'DELETE',\n      url: `/posts/${postId}`,\n      token\n    });\n    await fetchPosts();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [token ? /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/addpost\",\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostSingle, {\n      id: \"posts\",\n      post: post,\n      token: token,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${post._id}`,\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), post.isAuthor && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(post._id),\n        children: \"Delete Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 38\n      }, this), post.isAuthor && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setPostId(post._id);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 38\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 31\n    }, this))]\n  }, void 0, true);\n};\n\n_c = DeletePosts;\nexport default DeletePosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeletePosts\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/DeletePost.js"],"names":["React","callApi","PostSingle","Link","DeletePosts","props","posts","postId","setPostId","token","fetchPosts","handleDelete","deleteResp","method","url","map","post","_id","isAuthor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA;AAAnC,MAAkDL,KAAxD;;AAEA,QAAMM,YAAY,GAAG,MAAOJ,MAAP,IAAkB;AACnC,UAAMK,UAAU,GAAG,MAAMX,OAAO,CAAC;AAC7BY,MAAAA,MAAM,EAAE,QADqB;AAE7BC,MAAAA,GAAG,EAAG,UAASP,MAAO,EAFO;AAG7BE,MAAAA;AAH6B,KAAD,CAAhC;AAKA,UAAMC,UAAU,EAAhB;AACH,GAPD;;AASA,sBAAO;AAAA,eAECD,KAAK,gBAAG,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAyC,EAF/C,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,EAMCH,KAAK,CAACS,GAAN,CAAUC,IAAI,iBAAI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,OAAf;AAAsC,MAAA,IAAI,EAAEA,IAA5C;AAAkD,MAAA,KAAK,EAAEP,KAAzD;AAAA,8BACd,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASO,IAAI,CAACC,GAAI,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADc,EAGVD,IAAI,CAACE,QAAL,iBAAiB;AAAQ,QAAA,OAAO,EAAE,MAAMP,YAAY,CAACK,IAAI,CAACC,GAAN,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHP,EAMVD,IAAI,CAACE,QAAL,iBAAiB;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACV,UAAAA,SAAS,CAACQ,IAAI,CAACC,GAAN,CAAT;AAAoB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANP;AAAA,OAA4BD,IAAI,CAACC,GAAjC;AAAA;AAAA;AAAA;AAAA,YAAlB,CAND;AAAA,kBAAP;AA+CH,CA3DD;;KAAMb,W;AA6DN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { callApi } from '../util';\nimport PostSingle from './PostSingle';\nimport { Link } from 'react-router-dom';\n\nconst DeletePosts = (props) => {\n    const { posts, postId, setPostId, token, fetchPosts } = props;\n\n    const handleDelete = async (postId) => {\n        const deleteResp = await callApi({\n            method: 'DELETE',\n            url: `/posts/${postId}`,\n            token\n        });\n        await fetchPosts();\n    }\n        \n    return <>\n        {\n            token ? <Link to='/addpost'>Add Post</Link> : ''\n        }\n        <h1>Posts</h1>\n        {\n            posts.map(post => <PostSingle id=\"posts\" key={post._id} post={post} token={token}>\n                <Link to={`/posts/${post._id}`}>Details</Link>\n                {\n                    post.isAuthor && <button onClick={() => handleDelete(post._id)}>Delete Post</button>\n                }\n                {\n                    post.isAuthor && <button onClick={() => {setPostId(post._id)}}>Edit</button>\n                }\n                {/* <form onSubmit={handleUpdate}>\n                    <fieldset>\n                        <label>Title: </label>\n                        <input type=\"text\" placeholder=\"*title*\" value={title} onChange={(event) => {setTitle(event.target.value)}}></input>\n                    </fieldset>\n                    <fieldset>\n                        <label>Price: </label>\n                        <input type=\"text\" placeholder=\"price\" value={price} onChange={(event) => {setPrice(event.target.value)}}></input>\n                    </fieldset>\n                    <fieldset>\n                        <label>Description: </label>\n                        <input type=\"text\" placeholder=\"description\" value={description} onChange={(event) => {setDescription(event.target.value)}}></input>\n                    </fieldset>\n                    <fieldset>\n                        <label>Location: </label>\n                        <input type=\"text\" placeholder=\"location\" value={location} onChange={(event) => {setLocation(event.target.value)}}></input>\n                    </fieldset>\n                    <fieldset>\n                        <label>Will Deliver? </label>\n                        <select type=\"text\" value={willDeliver} onChange={(ev) => setWillDeliver(ev.target.value)}>\n                            <option value=\"\">Select</option>\n                            <option value=\"true\">Yes</option>\n                            <option value=\"false\">No</option>\n                        </select>\n                    </fieldset>\n                    <fieldset>\n                        <button className=\"newpost-submit\" type=\"submit\">Update</button>\n                    </fieldset>\n                </form> */}\n            </PostSingle>\n            )\n        }\n    </>\n}\n\nexport default DeletePosts;"]},"metadata":{},"sourceType":"module"}