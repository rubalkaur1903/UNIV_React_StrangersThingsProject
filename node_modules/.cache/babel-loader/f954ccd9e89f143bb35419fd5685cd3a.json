{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  posts\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const postMatches = (post, text) => {\n    const check = posts.includes(searchTerm);\n    console.log('check', check);\n  };\n\n  const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: ev => {\n        ev.preventDefault();\n        postsToDisplay.map(postToDisplay);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js"],"names":["React","useEffect","useState","callApi","Search","posts","searchTerm","setSearchTerm","postMatches","post","text","check","includes","console","log","filteredPosts","filter","postsToDisplay","length","ev","preventDefault","map","postToDisplay","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,SAAxB;;;;AAEA,MAAMC,MAAM,GAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMM,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAChC,UAAMC,KAAK,GAAGN,KAAK,CAACO,QAAN,CAAeN,UAAf,CAAd;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACH,GAHD;;AAIA,QAAMI,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAaP,IAAI,IAAID,WAAW,CAACC,IAAD,EAAOH,UAAP,CAAhC,CAAtB;AACA,QAAMW,cAAc,GAAGX,UAAU,CAACY,MAAX,GAAoBH,aAApB,GAAoCV,KAA3D;AAEA,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAGc,EAAD,IAAQ;AAC5CA,QAAAA,EAAE,CAACC,cAAH;AACAH,QAAAA,cAAc,CAACI,GAAf,CAAmBC,aAAnB;AACH,OAHD;AAAA,8BAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AAAiE,QAAA,KAAK,EAAEhB,UAAxE;AAAoF,QAAA,QAAQ,EAAGiB,KAAD,IAAWhB,aAAa,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtH;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAUH,CApBD;;GAAMrB,M;;KAAAA,M;AAsBN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\n\nconst Search =  ({posts}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const postMatches = (post, text) => {\n        const check = posts.includes(searchTerm);\n        console.log('check', check)\n    }\n    const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n    const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n    return <>\n        <form className=\"search-form\" onSubmit={(ev) => {\n            ev.preventDefault();\n            postsToDisplay.map(postToDisplay)\n        }\n    }>\n            <input type=\"text\" placeholder=\"search\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}