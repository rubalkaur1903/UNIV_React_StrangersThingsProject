{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  posts\n}) => {\n  _s();\n\n  console.log('posts: ', posts);\n  const [searchTerm, setSearchTerm] = useState('');\n  console.log('searchTerm ', searchTerm);\n\n  const handleSearch = async () => {\n    const searchResp = await callApi({\n      method: 'GET',\n      url: `/posts?title=${searchTerm}`\n    });\n    console, log('searchResp ', searchResp);\n  }; // const postMatches = (post, text) => {\n  //     const check = posts.includes(searchTerm);\n  //     console.log('check', check)\n  // }\n  // const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  // const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: ev => {\n        ev.preventDefault(); // postsToDisplay.map(postToDisplay => postToDisplay);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js"],"names":["React","useEffect","useState","callApi","Search","posts","console","log","searchTerm","setSearchTerm","handleSearch","searchResp","method","url","ev","preventDefault","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,SAAxB;;;;AAEA,MAAMC,MAAM,GAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,UAA3B;;AAEA,QAAME,YAAY,GAAG,YAAY;AAC7B,UAAMC,UAAU,GAAG,MAAMR,OAAO,CAAC;AAC7BS,MAAAA,MAAM,EAAE,KADqB;AAE7BC,MAAAA,GAAG,EAAG,gBAAeL,UAAW;AAFH,KAAD,CAAhC;AAIAF,IAAAA,OAAO,EAACC,GAAG,CAAC,aAAD,EAAgBI,UAAhB,CAAX;AACH,GAND,CALyB,CAazB;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAGG,EAAD,IAAQ;AAC5CA,QAAAA,EAAE,CAACC,cAAH,GAD4C,CAE5C;AACH,OAHD;AAAA,8BAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AAAiE,QAAA,KAAK,EAAEP,UAAxE;AAAoF,QAAA,QAAQ,EAAGQ,KAAD,IAAWP,aAAa,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtH;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAUH,CA9BD;;GAAMd,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\n\nconst Search =  ({posts}) => {\n    console.log('posts: ', posts)\n    const [searchTerm, setSearchTerm] = useState('');\n    console.log('searchTerm ', searchTerm);\n\n    const handleSearch = async () => {\n        const searchResp = await callApi({\n            method: 'GET',\n            url: `/posts?title=${searchTerm}`\n        })\n        console,log('searchResp ', searchResp)\n    }\n\n    // const postMatches = (post, text) => {\n    //     const check = posts.includes(searchTerm);\n    //     console.log('check', check)\n    // }\n    // const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n    // const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n    return <>\n        <form className=\"search-form\" onSubmit={(ev) => {\n            ev.preventDefault();\n            // postsToDisplay.map(postToDisplay => postToDisplay);\n        }\n    }>\n            <input type=\"text\" placeholder=\"search\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}