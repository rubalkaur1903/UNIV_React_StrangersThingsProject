{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/MyProfile.js\";\nimport React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyProfile = ({\n  posts,\n  token,\n  setPosts,\n  messages,\n  postId,\n  user,\n  setMesaages\n}) => {\n  console.log('messages', messages); // const [myMessages, setMyMessages] = useState([]);\n\n  const profile = async () => {\n    const messageResp = await callApi({\n      method: 'GET',\n      url: '/users/me',\n      token\n    });\n    const myMessages = await callApi({\n      url: '/posts',\n      token\n    });\n    console.log(myMessages); // setPosts(myMessages)\n\n    if (myMessages) {\n      setMesaages(myMessages.data.messages);\n    }\n  };\n\n  profile();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Profiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: ev => {\n        ev.preventDefault();\n        profile();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"View My Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  {\n    /* <div>\n       {\n           token ? \n           myMessages.map(myMessage => {\n               return <>\n                {\n                postId !== message.fromUser._id ?\n                   <div>{message.post.title}: {message.fromUser.username} replied: {message.content}</div>\n                   : ''\n                   }\n               </>\n           }) : ''\n       } */\n  }\n  {\n    /* {\n       token ?\n       messages.map(message => {\n           console.log(message)\n           return <>\n           {\n               postId !== message.fromUser._id ?\n               <div>{message.post.title}: {message.fromUser.username} replied: {message.content}</div>\n               : ''\n           }\n           </>\n       }) : ''   \n    } */\n  }\n  {\n    /* </div>\n    </>\n    } */\n  }\n};\n\n_c = MyProfile;\nexport default MyProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/MyProfile.js"],"names":["React","useEffect","useState","callApi","MyProfile","posts","token","setPosts","messages","postId","user","setMesaages","console","log","profile","messageResp","method","url","myMessages","data","ev","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,SAAxB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,MAAnC;AAA2CC,EAAAA,IAA3C;AAAiDC,EAAAA;AAAjD,CAAD,KAAmE;AACjFC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB,EADiF,CAEjF;;AACA,QAAMM,OAAO,GAAG,YAAY;AACxB,UAAMC,WAAW,GAAG,MAAMZ,OAAO,CAAC;AAC9Ba,MAAAA,MAAM,EAAE,KADsB;AAE9BC,MAAAA,GAAG,EAAE,WAFyB;AAG9BX,MAAAA;AAH8B,KAAD,CAAjC;AAKA,UAAMY,UAAU,GAAG,MAAMf,OAAO,CAAC;AAACc,MAAAA,GAAG,EAAE,QAAN;AAAgBX,MAAAA;AAAhB,KAAD,CAAhC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ,EAPwB,CAQxB;;AACA,QAAGA,UAAH,EAAe;AACXP,MAAAA,WAAW,CAACO,UAAU,CAACC,IAAX,CAAgBX,QAAjB,CAAX;AACH;AACJ,GAZD;;AAaAM,EAAAA,OAAO;AACP,sBAAO;AAAA,4BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,eAEP;AAAM,MAAA,QAAQ,EAAGM,EAAD,IAAQ;AACpBA,QAAAA,EAAE,CAACC,cAAH;AACAP,QAAAA,OAAO;AACV,OAHD;AAAA,6BAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFO;AAAA,kBAAP;AASG;AAAC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAgB;AAEL;AAAC;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAgB;AACT;AAAC;AACR;AACA;AAAK;AACJ,CAxDD;;KAAMV,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\n\nconst MyProfile = ({posts, token, setPosts, messages, postId, user, setMesaages}) => {\n    console.log('messages', messages)\n    // const [myMessages, setMyMessages] = useState([]);\n    const profile = async () => {\n        const messageResp = await callApi({\n            method: 'GET',\n            url: '/users/me',\n            token\n        });\n        const myMessages = await callApi({url: '/posts', token})\n        console.log(myMessages)\n        // setPosts(myMessages)\n        if(myMessages) {\n            setMesaages(myMessages.data.messages)\n        }\n    }\n    profile()\n    return <>\n    <h1>My Profiles</h1>\n    <form onSubmit={(ev) => {\n        ev.preventDefault();\n        profile()\n    }}>\n        <button type=\"submit\">View My Messages</button>\n    </form>\n    </>\n       {/* <div>\n           {\n               token ? \n               myMessages.map(myMessage => {\n                   return <>\n                    {\n                    postId !== message.fromUser._id ?\n                       <div>{message.post.title}: {message.fromUser.username} replied: {message.content}</div>\n                       : ''\n                       }\n                   </>\n               }) : ''\n           } */}\n\n           {/* {\n               token ?\n               messages.map(message => {\n                   console.log(message)\n                   return <>\n                   {\n                       postId !== message.fromUser._id ?\n                       <div>{message.post.title}: {message.fromUser.username} replied: {message.content}</div>\n                       : ''\n                   }\n                   </>\n               }) : ''   \n           } */}\n       {/* </div>\n    </>\n} */}\n}\nexport default MyProfile;"]},"metadata":{},"sourceType":"module"}