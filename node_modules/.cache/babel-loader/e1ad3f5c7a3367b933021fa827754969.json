{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  token,\n  setPosts\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  console;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: async ev => {\n        ev.preventDefault();\n        console.log('searchTerm', searchTerm);\n\n        try {\n          const searchResp = await callApi({\n            method: 'POST',\n            url: `/posts/${searchTerm}`,\n            token,\n            body: {\n              user: {\n                searchTerm\n              }\n            }\n          });\n          console.log(searchResp);\n          setPosts(searchResp);\n        } catch (error) {\n          console.error(error);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js"],"names":["React","useState","callApi","Search","token","setPosts","searchTerm","setSearchTerm","console","ev","preventDefault","log","searchResp","method","url","body","user","error","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,SAAxB;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACAO,EAAAA,OAAO;AACP,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAG,MAAOC,EAAP,IAAc;AACnDA,QAAAA,EAAE,CAACC,cAAH;AACAF,QAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BL,UAA1B;;AACA,YAAI;AACA,gBAAMM,UAAU,GAAG,MAAMV,OAAO,CAAC;AAC7BW,YAAAA,MAAM,EAAE,MADqB;AAE7BC,YAAAA,GAAG,EAAG,UAASR,UAAW,EAFG;AAG7BF,YAAAA,KAH6B;AAI7BW,YAAAA,IAAI,EAAE;AACFC,cAAAA,IAAI,EAAE;AACFV,gBAAAA;AADE;AADJ;AAJuB,WAAD,CAAhC;AAUAE,UAAAA,OAAO,CAACG,GAAR,CAAYC,UAAZ;AACAP,UAAAA,QAAQ,CAACO,UAAD,CAAR;AACH,SAbD,CAaE,OAAOK,KAAP,EAAc;AACZT,UAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACH;AACJ,OAnBD;AAAA,8BAoBI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AAAiE,QAAA,KAAK,EAAEX,UAAxE;AAAoF,QAAA,QAAQ,EAAGY,KAAD,IAAWX,aAAa,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtH;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAyBH,CA5BD;;GAAMjB,M;;KAAAA,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { callApi } from '../util';\n\nconst Search = ({token, setPosts}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    console\n    return <>\n        <form className=\"search-form\" onSubmit={ async (ev) => {\n            ev.preventDefault();\n            console.log('searchTerm', searchTerm)\n            try {\n                const searchResp = await callApi({\n                    method: 'POST',\n                    url: `/posts/${searchTerm}`,\n                    token,\n                    body: {\n                        user: {\n                            searchTerm\n                        }\n                    }\n                });\n                console.log(searchResp)\n                setPosts(searchResp);\n            } catch (error) {\n                console.error(error)\n            }\n        }}>\n            <input type=\"text\" placeholder=\"search\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}