{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  posts,\n  setPosts,\n  fetchPosts\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  console;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: async ev => {\n        ev.preventDefault();\n        console.log('searchTerm', searchTerm);\n\n        try {\n          const results = await callApi({\n            method: 'POST',\n            url: `/posts/${searchTerm}`,\n            token\n          });\n          setSearchTerm(results);\n        } catch (error) {\n          console.error(error);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js"],"names":["React","useState","Search","posts","setPosts","fetchPosts","searchTerm","setSearchTerm","console","ev","preventDefault","log","results","callApi","method","url","token","error","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAAA;;AAC9C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACAO,EAAAA,OAAO;AACP,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAG,MAAOC,EAAP,IAAc;AACnDA,QAAAA,EAAE,CAACC,cAAH;AACAF,QAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ,EAA0BL,UAA1B;;AACA,YAAI;AACA,gBAAMM,OAAO,GAAG,MAAMC,OAAO,CAAC;AAC1BC,YAAAA,MAAM,EAAE,MADkB;AAE1BC,YAAAA,GAAG,EAAG,UAAST,UAAW,EAFA;AAG1BU,YAAAA;AAH0B,WAAD,CAA7B;AAKAT,UAAAA,aAAa,CAACK,OAAD,CAAb;AACH,SAPD,CAOE,OAAOK,KAAP,EAAc;AACZT,UAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACH;AACJ,OAbD;AAAA,8BAcI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AAAiE,QAAA,KAAK,EAAEX,UAAxE;AAAoF,QAAA,QAAQ,EAAGY,KAAD,IAAWX,aAAa,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtH;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAmBH,CAtBD;;GAAMlB,M;;KAAAA,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Search = ({posts, setPosts, fetchPosts}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    console\n    return <>\n        <form className=\"search-form\" onSubmit={ async (ev) => {\n            ev.preventDefault();\n            console.log('searchTerm', searchTerm)\n            try {\n                const results = await callApi({\n                    method: 'POST',\n                    url: `/posts/${searchTerm}`,\n                    token\n                });\n                setSearchTerm(results);\n            } catch (error) {\n                console.error(error)\n            }\n        }}>\n            <input type=\"text\" placeholder=\"search\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}