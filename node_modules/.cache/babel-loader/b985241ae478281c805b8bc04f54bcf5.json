{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/MyProfile.js\";\nimport React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyProfile = ({\n  posts,\n  token,\n  setPosts,\n  messages,\n  postId,\n  user,\n  setMesaages\n}) => {\n  console.log('messages', messages); // const [myMessages, setMyMessages] = useState([]);\n\n  console.log('posts', posts);\n\n  const profile = async () => {\n    const messageResp = await callApi({\n      method: 'GET',\n      url: '/users/me',\n      token\n    });\n    const myMessages = await callApi({\n      url: '/users/me',\n      token\n    });\n    console.log(myMessages);\n  };\n\n  profile();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: token ? messages.map(message => {\n        console.log(message);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: postId !== message.fromUser._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [message.post.title, \": \", message.fromUser.username, \" replied: \", message.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 24\n          }, this) : ''\n        }, void 0, false);\n      }) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_c = MyProfile;\nexport default MyProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/MyProfile.js"],"names":["React","useEffect","useState","callApi","MyProfile","posts","token","setPosts","messages","postId","user","setMesaages","console","log","profile","messageResp","method","url","myMessages","map","message","fromUser","_id","post","title","username","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,SAAxB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,MAAnC;AAA2CC,EAAAA,IAA3C;AAAiDC,EAAAA;AAAjD,CAAD,KAAmE;AACjFC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB,EADiF,CAEjF;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,KAArB;;AACA,QAAMS,OAAO,GAAG,YAAY;AACxB,UAAMC,WAAW,GAAG,MAAMZ,OAAO,CAAC;AAC9Ba,MAAAA,MAAM,EAAE,KADsB;AAE9BC,MAAAA,GAAG,EAAE,WAFyB;AAG9BX,MAAAA;AAH8B,KAAD,CAAjC;AAKA,UAAMY,UAAU,GAAG,MAAMf,OAAO,CAAC;AAACc,MAAAA,GAAG,EAAE,WAAN;AAAmBX,MAAAA;AAAnB,KAAD,CAAhC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;AAEH,GATD;;AAUAJ,EAAAA,OAAO;AACP,sBAAO;AAAA,2BACJ;AAAA,gBAEQR,KAAK,GACLE,QAAQ,CAACW,GAAT,CAAaC,OAAO,IAAI;AACpBR,QAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;AACA,4BAAO;AAAA,oBAEHX,MAAM,KAAKW,OAAO,CAACC,QAAR,CAAiBC,GAA5B,gBACA;AAAA,uBAAMF,OAAO,CAACG,IAAR,CAAaC,KAAnB,QAA4BJ,OAAO,CAACC,QAAR,CAAiBI,QAA7C,gBAAiEL,OAAO,CAACM,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAEE;AAJC,yBAAP;AAOH,OATD,CADK,GAUA;AAZb;AAAA;AAAA;AAAA;AAAA;AADI,mBAAP;AAiBH,CAhCD;;KAAMtB,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\n\nconst MyProfile = ({posts, token, setPosts, messages, postId, user, setMesaages}) => {\n    console.log('messages', messages)\n    // const [myMessages, setMyMessages] = useState([]);\n    console.log('posts', posts)\n    const profile = async () => {\n        const messageResp = await callApi({\n            method: 'GET',\n            url: '/users/me',\n            token\n        });\n        const myMessages = await callApi({url: '/users/me', token})\n        console.log(myMessages)\n        \n    }\n    profile()\n    return <>\n       <div>\n           {\n               token ?\n               messages.map(message => {\n                   console.log(message)\n                   return <>\n                   {\n                       postId !== message.fromUser._id ?\n                       <div>{message.post.title}: {message.fromUser.username} replied: {message.content}</div>\n                       : ''\n                   }\n                   </>\n               }) : ''   \n           }\n       </div>\n    </>\n}\n\nexport default MyProfile;"]},"metadata":{},"sourceType":"module"}