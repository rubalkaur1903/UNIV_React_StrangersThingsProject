{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/AddPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddPost = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [location, setLocation] = useState('');\n  const [willDeliver, setWillDeliver] = useState('');\n  const {\n    token,\n    setPosts\n  } = props;\n  const history = useHistory();\n\n  const handleAdd = async ev => {\n    ev.preventDefault();\n    const addPostResp = await callApi({\n      url: '/posts',\n      method: 'POST',\n      body: {\n        post: {\n          title,\n          price,\n          description,\n          location,\n          willDeliver\n        }\n      },\n      token\n    });\n    const newPostResp = await callApi({\n      url: '/posts',\n      token\n    });\n    setPosts(newPostResp.data.posts);\n    setTitle('');\n    setPrice('');\n    setDescription('');\n\n    if (newPostResp.data.posts) {\n      history.push('/posts');\n    }\n  }; // const handleUpdate = async (ev) => {\n  //     const addPostResp = await callApi({\n  //         url: `/posts/${postId}`, \n  //         method: 'PATCH', \n  //         body: {\n  //             post: {\n  //                 title,\n  //                 price, \n  //                 description,\n  //                 location,\n  //                 willDeliver\n  //             }}, \n  //         token});\n  //         await fetchPosts();\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: token && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAdd,\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"*title*\",\n            value: title,\n            onChange: event => {\n              setTitle(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"price\",\n            value: price,\n            onChange: event => {\n              setPrice(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"description\",\n            value: description,\n            onChange: event => {\n              setDescription(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Location: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"location\",\n            value: location,\n            onChange: event => {\n              setLocation(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Will Deliver? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"text\",\n            value: willDeliver,\n            onChange: ev => setWillDeliver(ev.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"newpost-submit\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddPost, \"sgE44vCGIdVqmcSRA2hAnRRq3Ug=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/AddPosts.js"],"names":["React","useState","useHistory","callApi","AddPost","props","title","setTitle","price","setPrice","description","setDescription","location","setLocation","willDeliver","setWillDeliver","token","setPosts","history","handleAdd","ev","preventDefault","addPostResp","url","method","body","post","newPostResp","data","posts","push","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { callApi } from '../util';\n\nconst AddPost = (props) => {\n    const [title, setTitle] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [location, setLocation] = useState('')\n    const [willDeliver, setWillDeliver] = useState('')\n\n    const { token, setPosts } = props\n    const history = useHistory();\n\n    const handleAdd = async (ev) => {\n        ev.preventDefault();\n        const addPostResp = await callApi({\n            url: '/posts', \n            method: 'POST', \n            body: {\n                post: {\n                    title,\n                    price, \n                    description,\n                    location,\n                    willDeliver\n                }}, \n            token});\n            const newPostResp = await callApi({url: '/posts', token});\n            setPosts(newPostResp.data.posts);\n            setTitle('');\n            setPrice('');\n            setDescription('');\n            if(newPostResp.data.posts) {\n                history.push('/posts');\n            }\n    }\n    // const handleUpdate = async (ev) => {\n    //     const addPostResp = await callApi({\n    //         url: `/posts/${postId}`, \n    //         method: 'PATCH', \n    //         body: {\n    //             post: {\n    //                 title,\n    //                 price, \n    //                 description,\n    //                 location,\n    //                 willDeliver\n    //             }}, \n    //         token});\n    //         await fetchPosts();\n    // }\n\n    return <>\n    {\n        token &&\n        <div>\n            <h1>Add New Post</h1>\n            <form onSubmit={handleAdd}>\n                <fieldset>\n                    <label>Title: </label>\n                    <input type=\"text\" placeholder=\"*title*\" value={title} onChange={(event) => {setTitle(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Price: </label>\n                    <input type=\"text\" placeholder=\"price\" value={price} onChange={(event) => {setPrice(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Description: </label>\n                    <input type=\"text\" placeholder=\"description\" value={description} onChange={(event) => {setDescription(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Location: </label>\n                    <input type=\"text\" placeholder=\"location\" value={location} onChange={(event) => {setLocation(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Will Deliver? </label>\n                    <select type=\"text\" value={willDeliver} onChange={(ev) => setWillDeliver(ev.target.value)}>\n                        <option value=\"\">Select</option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                    </select>\n                </fieldset>\n                <fieldset>\n                    <button className=\"newpost-submit\" type=\"submit\">Submit</button>\n                </fieldset>\n            </form>\n        </div>    \n    }\n    </>\n}\n\nexport default AddPost;\n"]},"metadata":{},"sourceType":"module"}