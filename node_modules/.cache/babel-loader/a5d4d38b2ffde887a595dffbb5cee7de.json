{"ast":null,"code":"const {\n  REACT_APP_BASE_URL\n} = process.env;\nexport const callApi = async ({\n  url,\n  method,\n  token,\n  body\n}) => {\n  try {\n    const options = {\n      method: method.toUpperCase(),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n    if (token) options['Authorization'] = `Bearer ${token}`;\n    const response = await fetch(`${REACT_APP_BASE_URL}${url}`, options);\n    const data = await response.json();\n\n    if (data.error) {\n      throw data.error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/util/index.js"],"names":["REACT_APP_BASE_URL","process","env","callApi","url","method","token","body","options","toUpperCase","headers","JSON","stringify","response","fetch","data","json","error","console"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAyBC,OAAO,CAACC,GAAvC;AAEA,OAAO,MAAMC,OAAO,GAAG,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAP,KAAwC;AAC3D,MAAI;AACA,UAAMC,OAAO,GAAG;AACZH,MAAAA,MAAM,EAAEA,MAAM,CAACI,WAAP,EADI;AAEZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFG;AAKZH,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AALM,KAAhB;AAOA,QAAID,KAAJ,EAAWE,OAAO,CAAC,eAAD,CAAP,GAA4B,UAASF,KAAM,EAA3C;AACX,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,kBAAmB,GAAEI,GAAI,EAA7B,EAAgCI,OAAhC,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,QAAGD,IAAI,CAACE,KAAR,EAAe;AACX,YAAOF,IAAI,CAACE,KAAZ;AACH;;AACD,WAAOF,IAAP;AACH,GAfD,CAeE,OAAOE,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,CAnBM","sourcesContent":["const { REACT_APP_BASE_URL } = process.env;\n\nexport const callApi = async ({ url, method, token, body }) => {\n    try {\n        const options = {\n            method: method.toUpperCase(),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        };\n        if (token) options['Authorization'] = `Bearer ${token}`;\n        const response = await fetch(`${REACT_APP_BASE_URL}${url}`, options);\n        const data = await response.json();\n        if(data.error) {\n            throw (data.error);\n        }\n        return data;\n    } catch (error) {\n        console.error(error)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}