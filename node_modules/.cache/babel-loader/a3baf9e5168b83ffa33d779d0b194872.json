{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  posts,\n  setPosts\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(''); //     try {\n  //         const searchResp = await callApi({\n  //             method: 'GET',\n  //             url: `/posts`,\n  //         });\n  //         console.log('searchResp', searchResp);\n  //         if(!searchTerm) {\n  //             return posts;\n  //         } else{\n  //             return posts.filter(post => {\n  //                 const searchResults = post.title.toLowerCase() === searchTerm;\n  //                 console.log(searchResults)\n  //             })\n  // }\n  //         setPosts(searchResults);\n  //     } catch (error) {\n  //         console.error(error)\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: async ev => {\n        ev.preventDefault();\n        console.log('searchTerm', searchTerm);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js"],"names":["React","useState","callApi","Search","posts","setPosts","searchTerm","setSearchTerm","ev","preventDefault","console","log","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,SAAxB;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C,CADkC,CAE9B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACJ,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAG,MAAOO,EAAP,IAAc;AACnDA,QAAAA,EAAE,CAACC,cAAH;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,UAA1B;AACC,OAHL;AAAA,8BAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AAAiE,QAAA,KAAK,EAAEA,UAAxE;AAAoF,QAAA,QAAQ,EAAGM,KAAD,IAAWL,aAAa,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtH;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAUH,CAhCD;;GAAMX,M;;KAAAA,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { callApi } from '../util';\n\nconst Search = ({posts, setPosts}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n        //     try {\n        //         const searchResp = await callApi({\n        //             method: 'GET',\n        //             url: `/posts`,\n        //         });\n        //         console.log('searchResp', searchResp);\n    \n        //         if(!searchTerm) {\n        //             return posts;\n        //         } else{\n        //             return posts.filter(post => {\n        //                 const searchResults = post.title.toLowerCase() === searchTerm;\n        //                 console.log(searchResults)\n        //             })\n        // }\n        //         setPosts(searchResults);\n        //     } catch (error) {\n        //         console.error(error)\n        //     }\n        // }\n    return <>\n        <form className=\"search-form\" onSubmit={ async (ev) => {\n            ev.preventDefault();\n            console.log('searchTerm', searchTerm)\n            }\n        }>\n            <input type=\"text\" placeholder=\"search\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}