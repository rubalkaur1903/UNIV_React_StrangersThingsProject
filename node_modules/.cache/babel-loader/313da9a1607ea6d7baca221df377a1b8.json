{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\nimport PostSingle from './PostSingle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  posts,\n  setPosts,\n  fetchPosts\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [originalPost, setOriginalPost] = useState(posts);\n\n  const postMatches = (post, text) => {\n    let check = post.includes(text);\n    return check;\n  };\n\n  const handleSubmit = () => {\n    const filteredPosts = posts.filter(post => postMatches(post.title.toLowerCase(), searchTerm));\n    setPosts(filteredPosts);\n\n    if (!searchTerm.length) {\n      fetchPosts();\n    }\n  }; // const fetchPosts = async () => {\n  //     const response = await callApi({\n  //         url: '/posts',\n  //     });\n  //     const allPosts = response.data.posts;\n  //         if(allPosts) setPosts(allPosts);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      onSubmit: event => {\n        event.preventDefault();\n        handleSubmit();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        className: \"search-input\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Search, \"xWdUg6kT9VeMs/rOT523kU9hqgM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/Search.js"],"names":["React","useEffect","useState","callApi","PostSingle","Search","posts","setPosts","fetchPosts","searchTerm","setSearchTerm","originalPost","setOriginalPost","postMatches","post","text","check","includes","handleSubmit","filteredPosts","filter","title","toLowerCase","length","event","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,MAAM,GAAI,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAAA;;AAC/C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAACI,KAAD,CAAhD;;AAEA,QAAMO,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAChC,QAAIC,KAAK,GAAGF,IAAI,CAACG,QAAL,CAAcF,IAAd,CAAZ;AACA,WAAOC,KAAP;AACH,GAHD;;AAIA,QAAME,YAAY,GAAG,MAAM;AACvB,UAAMC,aAAa,GAAGb,KAAK,CAACc,MAAN,CAAaN,IAAI,IAAID,WAAW,CAACC,IAAI,CAACO,KAAL,CAAWC,WAAX,EAAD,EAA2Bb,UAA3B,CAAhC,CAAtB;AACAF,IAAAA,QAAQ,CAACY,aAAD,CAAR;;AACA,QAAI,CAACV,UAAU,CAACc,MAAhB,EAAwB;AACpBf,MAAAA,UAAU;AACb;AACJ,GAND,CAR+C,CAe/C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAIgB,KAAD,IAAW;AAChDA,QAAAA,KAAK,CAACC,cAAN;AACAP,QAAAA,YAAY;AACf,OAHD;AAAA,8BAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,SAAS,EAAC,cAAlD;AAAiE,QAAA,KAAK,EAAET,UAAxE;AAAoF,QAAA,QAAQ,EAAGe,KAAD,IAAWd,aAAa,CAACc,KAAK,CAACE,MAAN,CAAaC,KAAd;AAAtH;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AASH,CAhCD;;GAAMtB,M;;KAAAA,M;AAkCN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { callApi } from '../util';\nimport PostSingle from './PostSingle';\n\nconst Search =  ({posts, setPosts, fetchPosts}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [originalPost, setOriginalPost] = useState(posts);\n\n    const postMatches = (post, text) => {\n        let check = post.includes(text);\n        return check;\n    }\n    const handleSubmit = () => {\n        const filteredPosts = posts.filter(post => postMatches(post.title.toLowerCase(), searchTerm));\n        setPosts(filteredPosts);\n        if (!searchTerm.length) {\n            fetchPosts();\n        }\n    }\n    // const fetchPosts = async () => {\n    //     const response = await callApi({\n    //         url: '/posts',\n    //     });\n    //     const allPosts = response.data.posts;\n    //         if(allPosts) setPosts(allPosts);\n    // }\n\n    return <>\n        <form className=\"search-form\" onSubmit={ (event) => {\n            event.preventDefault();\n            handleSubmit();\n        }}>\n            <input type=\"text\" placeholder=\"search\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Search</button>\n        </form>\n    </>\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}