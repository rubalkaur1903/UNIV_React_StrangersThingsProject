{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ReactDOM from'react-dom';import{BrowserRouter,Route,Link}from'react-router-dom';import DeletePosts from'./Components/DeletePost';import AccountForm from'./Components/AccountForm';import Home from'./Components/Home';import Logout from'./Components/Logout';import AddPost from'./Components/AddPosts';import PostView from'./Components/PostView';import MyProfile from'./Components/MyProfile';import Search from'./Components/Search';import'../src/style.css';import{callApi}from'./util';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var REACT_APP_BASE_URL=process.env.REACT_APP_BASE_URL;var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),token=_useState4[0],setToken=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),postId=_useState8[0],setPostId=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messages=_useState10[0],setMessages=_useState10[1];var fetchPosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,allPosts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return callApi({url:'/posts',token:token});case 2:response=_context.sent;allPosts=response.data.posts;if(allPosts)setPosts(allPosts);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchPosts(){return _ref.apply(this,arguments);};}();useEffect(function(){try{fetchPosts();}catch(error){console.log(error);}},[token]);return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(\"div\",{id:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(Link,{className:\"main-link\",to:\"/\",children:\"HOME\"}),/*#__PURE__*/_jsx(Link,{className:\"main-link\",to:\"/posts\",children:\"POSTS\"}),token&&/*#__PURE__*/_jsx(Link,{className:\"main-link\",to:\"/profile\",children:\"PROFILE\"}),token?/*#__PURE__*/_jsx(Logout,{setToken:setToken}):/*#__PURE__*/_jsx(Link,{className:\"main-link\",to:\"/account/:method\",children:\"LOGIN/REGISTER\"})]}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Home,{username:user,token:token,posts:posts})}),/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/posts\",children:[/*#__PURE__*/_jsx(Search,{posts:posts,setPosts:setPosts,fetchPosts:fetchPosts}),/*#__PURE__*/_jsx(DeletePosts,{posts:posts,token:token,fetchPosts:fetchPosts,setPostId:setPostId})]}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/addpost\",children:/*#__PURE__*/_jsx(AddPost,{token:token,setPosts:setPosts})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/posts/:postId\",children:/*#__PURE__*/_jsx(PostView,{posts:posts,token:token,fetchPosts:fetchPosts})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile\",children:/*#__PURE__*/_jsx(MyProfile,{token:token,messages:messages,setMesaages:setMessages,user:user})}),/*#__PURE__*/_jsxs(Route,{exact:true,path:\"/account/:method\",children:[/*#__PURE__*/_jsx(Link,{className:\"links\",to:\"/account/login\",children:\"Login\"}),/*#__PURE__*/_jsx(Link,{className:\"links\",to:\"/account/register\",children:\"Register\"}),/*#__PURE__*/_jsx(AccountForm,{setToken:setToken,setUser:setUser})]})]})});};ReactDOM.render(/*#__PURE__*/_jsx(App,{}),document.getElementById('app'));","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/index.js"],"names":["React","useState","useEffect","ReactDOM","BrowserRouter","Route","Link","DeletePosts","AccountForm","Home","Logout","AddPost","PostView","MyProfile","Search","callApi","REACT_APP_BASE_URL","process","env","App","posts","setPosts","token","setToken","user","setUser","postId","setPostId","messages","setMessages","fetchPosts","url","response","allPosts","data","error","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nimport DeletePosts from './Components/DeletePost';\nimport AccountForm from './Components/AccountForm';\nimport Home from './Components/Home';\nimport Logout from './Components/Logout';\nimport AddPost from './Components/AddPosts';\nimport PostView from './Components/PostView';\nimport MyProfile from './Components/MyProfile';\nimport Search from './Components/Search';\n\n\nimport '../src/style.css'\nimport { callApi } from './util';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [token, setToken] = useState('');\n    const [user, setUser] = useState('');\n    const [postId, setPostId] = useState('');\n    const [messages, setMessages] = useState([]);\n    \n    const fetchPosts = async () => {\n        const response = await callApi({\n            url: '/posts',\n            token\n        });\n        const allPosts = response.data.posts;\n        if(allPosts) setPosts(allPosts);\n    }\n    \n    useEffect(() => {\n        try {\n            fetchPosts();\n            } catch (error) {\n                console.log(error);\n            }\n        }, [token])\n\n  return (\n    <BrowserRouter>\n        <div id=\"container\">\n            <div className=\"navbar\">\n                <Link className=\"main-link\" to=\"/\">HOME</Link>\n                <Link className=\"main-link\" to=\"/posts\">POSTS</Link>\n                {\n                    token && <Link className=\"main-link\" to=\"/profile\">PROFILE</Link>\n                }\n                {\n                    token ? <Logout setToken={setToken}/> : <Link className=\"main-link\" to=\"/account/:method\">LOGIN/REGISTER</Link>\n                }\n            </div>\n            <Route exact path=\"/\">\n                <Home username={user} token={token} posts={posts}/>\n            </Route>\n            <Route exact path=\"/posts\">\n                <Search posts={posts} setPosts={setPosts} fetchPosts={fetchPosts}/>\n                <DeletePosts posts={posts} token={token} fetchPosts={fetchPosts} setPostId={setPostId} />\n            </Route>\n            <Route exact path=\"/addpost\">\n                <AddPost token={token} setPosts={setPosts} />\n            </Route>\n            <Route exact path=\"/posts/:postId\">\n                <PostView posts={posts} token={token} fetchPosts={fetchPosts}/>\n            </Route>\n            <Route exact path=\"/profile\">\n                <MyProfile token={token} messages={messages} setMesaages={setMessages} user={user}/>\n            </Route>\n            <Route exact path=\"/account/:method\">\n                <Link className=\"links\" to=\"/account/login\">Login</Link> \n                <Link className=\"links\" to=\"/account/register\">Register</Link>\n                <AccountForm setToken={setToken} setUser={setUser}/>   \n            </Route>\n        </div>\n    </BrowserRouter>\n  )\n}\nReactDOM.render(\n  <App />,\n  document.getElementById('app'),\n);"]},"metadata":{},"sourceType":"module"}