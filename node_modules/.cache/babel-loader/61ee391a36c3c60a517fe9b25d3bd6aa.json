{"ast":null,"code":"var _jsxFileName = \"/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/AccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { callApi } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_BASE_URL\n} = process.env;\n\nconst AccountForm = ({\n  setToken,\n  setMessage\n}) => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const params = useParams();\n  const history = useHistory(); // const [secondPassword, setSecondPassword] = useState('');\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inputs\",\n      onSubmit: async event => {\n        event.preventDefault();\n        const respObj = callApi({\n          url: `/users/${params.method}`,\n          method: 'POST',\n          body: {\n            user: {\n              username,\n              password\n            }\n          }\n        }); // const resp = await fetch(`${REACT_APP_BASE_URL}/users/${params.method}`, {\n        //     method: \"POST\",\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify({\n        //         user: {\n        //         username,\n        //         password\n        //         }\n        //     })\n        // });\n        // const respObj = await resp.json();\n\n        console.log(respObj); // setToken(respObj.data.token);\n\n        if (respObj.data) {\n          setToken(respObj.data.token);\n          setMessage(respObj.data.message);\n\n          if (respObj.data.token) {\n            history.push('/');\n          }\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputs\",\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        minLength: 8,\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputs\",\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        minLength: 8,\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-input\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AccountForm, \"PV2GAx0rmgboZxWoXyyYeBanVVw=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AccountForm;\nexport default AccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"sources":["/Users/rubalkaur/MyCourseWork/UNIV_React_StrangersThingsProject/src/Components/AccountForm.js"],"names":["React","useState","useParams","useHistory","callApi","REACT_APP_BASE_URL","process","env","AccountForm","setToken","setMessage","username","setUsername","password","setPassword","params","history","event","preventDefault","respObj","url","method","body","user","console","log","data","token","message","push","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AAEA,SAASC,OAAT,QAAwB,SAAxB;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAyBC,OAAO,CAACC,GAAvC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA4B;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMc,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAMc,OAAO,GAAGb,UAAU,EAA1B,CAJ4C,CAK5C;;AAEA,sBAAO;AAAA,2BACH;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,QAAQ,EAAG,MAAOc,KAAP,IAAiB;AACjDA,QAAAA,KAAK,CAACC,cAAN;AAEA,cAAMC,OAAO,GAAGf,OAAO,CAAC;AACpBgB,UAAAA,GAAG,EAAG,UAASL,MAAM,CAACM,MAAO,EADT;AAEpBA,UAAAA,MAAM,EAAE,MAFY;AAGpBC,UAAAA,IAAI,EAAE;AACFC,YAAAA,IAAI,EAAE;AACNZ,cAAAA,QADM;AAENE,cAAAA;AAFM;AADJ;AAHc,SAAD,CAAvB,CAHiD,CAcjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EA3BiD,CA4BjD;;AACA,YAAIA,OAAO,CAACO,IAAZ,EAAkB;AACdjB,UAAAA,QAAQ,CAACU,OAAO,CAACO,IAAR,CAAaC,KAAd,CAAR;AACAjB,UAAAA,UAAU,CAACS,OAAO,CAACO,IAAR,CAAaE,OAAd,CAAV;;AACA,cAAIT,OAAO,CAACO,IAAR,CAAaC,KAAjB,EAAwB;AACpBX,YAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACH;AACJ;AACJ,OApCD;AAAA,8BAqCI;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,WAAW,EAAC,gBAAlD;AAAmE,QAAA,SAAS,EAAE,CAA9E;AAAiF,QAAA,KAAK,EAAElB,QAAxF;AAAkG,QAAA,QAAQ,EAAGM,KAAD,IAAWL,WAAW,CAACK,KAAK,CAACa,MAAN,CAAaC,KAAd;AAAlI;AAAA;AAAA;AAAA;AAAA,cArCJ,eAsCI;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,UAA/B;AAA0C,QAAA,WAAW,EAAC,gBAAtD;AAAuE,QAAA,SAAS,EAAE,CAAlF;AAAqF,QAAA,KAAK,EAAElB,QAA5F;AAAsG,QAAA,QAAQ,EAAGI,KAAD,IAAWH,WAAW,CAACG,KAAK,CAACa,MAAN,CAAaC,KAAd;AAAtI;AAAA;AAAA;AAAA;AAAA,cAtCJ,eA0CI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AA8CH,CArDD;;GAAMvB,W;UAGaN,S,EACCC,U;;;KAJdK,W;AAuDN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\nimport { callApi } from '../util';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst AccountForm = ({setToken, setMessage}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const params = useParams();\n    const history = useHistory();\n    // const [secondPassword, setSecondPassword] = useState('');\n\n    return <>\n        <form className=\"inputs\" onSubmit={ async (event) => {\n            event.preventDefault();\n\n            const respObj = callApi({\n                url: `/users/${params.method}`,\n                method: 'POST',\n                body: {\n                    user: {\n                    username,\n                    password\n                    }\n                }\n            });\n\n            // const resp = await fetch(`${REACT_APP_BASE_URL}/users/${params.method}`, {\n            //     method: \"POST\",\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     body: JSON.stringify({\n            //         user: {\n            //         username,\n            //         password\n            //         }\n            //     })\n            // });\n            // const respObj = await resp.json();\n            console.log(respObj)\n            // setToken(respObj.data.token);\n            if (respObj.data) {\n                setToken(respObj.data.token);\n                setMessage(respObj.data.message)\n                if (respObj.data.token) {\n                    history.push('/'); \n                }\n            }\n        }}>\n            <input className=\"inputs\" type=\"text\" placeholder=\"Enter Username\" minLength={8} value={username} onChange={(event) => setUsername(event.target.value)}></input>\n            <input className=\"inputs\" type=\"password\" placeholder=\"Enter Password\" minLength={8} value={password} onChange={(event) => setPassword(event.target.value)}></input>\n            {/* {\n                params.method === 'signup' ? <input type=\"password\" placeholder=\"Enter Password Again\" value={secondPassword} onChange={(event) => setSecondPassword(event.target.value)}></input> : password.value === secondPassword.value ? \n            } */}\n            <button className=\"btn-input\" type=\"submit\">Submit</button>\n        </form>\n    </>\n}\n\nexport default AccountForm;"]},"metadata":{},"sourceType":"module"}